// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QNF.Plataforma.Infrastructure.Data;

#nullable disable

namespace QNF.Plataforma.Infrastructure.Migrations
{
    [DbContext(typeof(PlataformaDbContext))]
    [Migration("20250701225820_AdicionarStatusJogador")]
    partial class AdicionarStatusJogador
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Dupla", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Jogador1Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Jogador2Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Jogador1Id");

                    b.HasIndex("Jogador2Id");

                    b.ToTable("Duplas", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CriadoPorJogadorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Grupos", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apelido")
                        .HasColumnType("text");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DuplaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TamanhoCamiseta")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DuplaId");

                    b.ToTable("Jogadores", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.JogadorGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("JogadorGrupos", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CriadoPorJogadorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Dupla1Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Dupla2Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Local")
                        .HasColumnType("text");

                    b.Property<int>("PontuacaoDupla1")
                        .HasColumnType("integer");

                    b.Property<int>("PontuacaoDupla2")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Jogos", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Ranking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Derrotas")
                        .HasColumnType("integer");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Jogos")
                        .HasColumnType("integer");

                    b.Property<int>("Vitorias")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Rankings", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("uuid");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.ValidacaoJogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uuid");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<Guid?>("CriadoPor")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataValidacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Validacoes", (string)null);
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Dupla", b =>
                {
                    b.HasOne("QNF.Plataforma.Core.Entities.Jogador", "Jogador1")
                        .WithMany()
                        .HasForeignKey("Jogador1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QNF.Plataforma.Core.Entities.Jogador", "Jogador2")
                        .WithMany()
                        .HasForeignKey("Jogador2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador1");

                    b.Navigation("Jogador2");
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Jogador", b =>
                {
                    b.HasOne("QNF.Plataforma.Core.Entities.Dupla", null)
                        .WithMany("Jogadores")
                        .HasForeignKey("DuplaId");
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Ranking", b =>
                {
                    b.HasOne("QNF.Plataforma.Core.Entities.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.User", b =>
                {
                    b.HasOne("QNF.Plataforma.Core.Entities.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("QNF.Plataforma.Core.Entities.Dupla", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
